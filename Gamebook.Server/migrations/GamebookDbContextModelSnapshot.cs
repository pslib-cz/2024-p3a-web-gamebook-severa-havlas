// <auto-generated />
using Gamebook.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gamebook.Server.Migrations
{
    [DbContext(typeof(GamebookDbContext))]
    partial class GamebookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("GameBookActionRoom", b =>
                {
                    b.Property<int>("RequiredActionsActionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RequiredActionsActionId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("GameBookActionRoom");
                });

            modelBuilder.Entity("Gamebook.Server.models.ActionType", b =>
                {
                    b.Property<int>("ActionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ActionTypeId");

                    b.ToTable("ActionTypes");
                });

            modelBuilder.Entity("Gamebook.Server.models.Connection", b =>
                {
                    b.Property<int>("ConnectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToRoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConnectionId");

                    b.HasIndex("FromRoomId");

                    b.HasIndex("ToRoomId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("Gamebook.Server.models.GameBookAction", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReqAction")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReqItem")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReqNPC")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReqProgress")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActionId");

                    b.HasIndex("ActionTypeId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("Gamebook.Server.models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameBookActionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Target")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.HasIndex("GameBookActionId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Gamebook.Server.models.ItemPosition", b =>
                {
                    b.Property<int>("ItemPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemPositionId");

                    b.HasIndex("ItemId");

                    b.HasIndex("RoomId");

                    b.ToTable("ItemPositions");
                });

            modelBuilder.Entity("Gamebook.Server.models.NPC", b =>
                {
                    b.Property<int>("NPCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Target")
                        .HasColumnType("INTEGER");

                    b.HasKey("NPCId");

                    b.HasIndex("ActionId");

                    b.ToTable("NPCs");
                });

            modelBuilder.Entity("Gamebook.Server.models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameBookActionActionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NextActionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OptionId");

                    b.HasIndex("GameBookActionActionId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Gamebook.Server.models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Img")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ItemRoom", b =>
                {
                    b.Property<int>("ItemsItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemsItemId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("ItemRoom");
                });

            modelBuilder.Entity("ItemRoom1", b =>
                {
                    b.Property<int>("RequiredItemsItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Room1RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RequiredItemsItemId", "Room1RoomId");

                    b.HasIndex("Room1RoomId");

                    b.ToTable("ItemRoom1");
                });

            modelBuilder.Entity("NPCRoom", b =>
                {
                    b.Property<int>("NPCsNPCId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("NPCsNPCId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("NPCRoom");
                });

            modelBuilder.Entity("NPCRoom1", b =>
                {
                    b.Property<int>("RequiredNPCsNPCId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Room1RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RequiredNPCsNPCId", "Room1RoomId");

                    b.HasIndex("Room1RoomId");

                    b.ToTable("NPCRoom1");
                });

            modelBuilder.Entity("GameBookActionRoom", b =>
                {
                    b.HasOne("Gamebook.Server.models.GameBookAction", null)
                        .WithMany()
                        .HasForeignKey("RequiredActionsActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamebook.Server.models.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gamebook.Server.models.Connection", b =>
                {
                    b.HasOne("Gamebook.Server.models.Room", null)
                        .WithMany("ConnectionsFrom")
                        .HasForeignKey("FromRoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gamebook.Server.models.Room", null)
                        .WithMany("ConnectionsTo")
                        .HasForeignKey("ToRoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Gamebook.Server.models.GameBookAction", b =>
                {
                    b.HasOne("Gamebook.Server.models.ActionType", "ActionType")
                        .WithMany()
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionType");
                });

            modelBuilder.Entity("Gamebook.Server.models.Item", b =>
                {
                    b.HasOne("Gamebook.Server.models.GameBookAction", "GameBookAction")
                        .WithMany()
                        .HasForeignKey("GameBookActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameBookAction");
                });

            modelBuilder.Entity("Gamebook.Server.models.ItemPosition", b =>
                {
                    b.HasOne("Gamebook.Server.models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamebook.Server.models.Room", "Room")
                        .WithMany("ItemPositions")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Gamebook.Server.models.NPC", b =>
                {
                    b.HasOne("Gamebook.Server.models.GameBookAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");
                });

            modelBuilder.Entity("Gamebook.Server.models.Option", b =>
                {
                    b.HasOne("Gamebook.Server.models.GameBookAction", null)
                        .WithMany("Options")
                        .HasForeignKey("GameBookActionActionId");
                });

            modelBuilder.Entity("ItemRoom", b =>
                {
                    b.HasOne("Gamebook.Server.models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamebook.Server.models.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ItemRoom1", b =>
                {
                    b.HasOne("Gamebook.Server.models.Item", null)
                        .WithMany()
                        .HasForeignKey("RequiredItemsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamebook.Server.models.Room", null)
                        .WithMany()
                        .HasForeignKey("Room1RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NPCRoom", b =>
                {
                    b.HasOne("Gamebook.Server.models.NPC", null)
                        .WithMany()
                        .HasForeignKey("NPCsNPCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamebook.Server.models.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NPCRoom1", b =>
                {
                    b.HasOne("Gamebook.Server.models.NPC", null)
                        .WithMany()
                        .HasForeignKey("RequiredNPCsNPCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamebook.Server.models.Room", null)
                        .WithMany()
                        .HasForeignKey("Room1RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gamebook.Server.models.GameBookAction", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Gamebook.Server.models.Room", b =>
                {
                    b.Navigation("ConnectionsFrom");

                    b.Navigation("ConnectionsTo");

                    b.Navigation("ItemPositions");
                });
#pragma warning restore 612, 618
        }
    }
}
