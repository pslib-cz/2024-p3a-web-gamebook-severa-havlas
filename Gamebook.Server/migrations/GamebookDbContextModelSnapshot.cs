// <auto-generated />
using Gamebook.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gamebook.Server.Migrations
{
    [DbContext(typeof(GamebookDbContext))]
    partial class GamebookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Gamebook.Server.models.ActionType", b =>
                {
                    b.Property<int>("ActionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ActionTypeId");

                    b.ToTable("ActionTypes");
                });

            modelBuilder.Entity("Gamebook.Server.models.Connection", b =>
                {
                    b.Property<int>("ConnectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToRoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConnectionId");

                    b.HasIndex("FromRoomId");

                    b.HasIndex("ToRoomId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("Gamebook.Server.models.Dialog", b =>
                {
                    b.Property<int>("DialogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NPCId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParentDialogId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DialogId");

                    b.HasIndex("ActionId");

                    b.HasIndex("NPCId");

                    b.HasIndex("ParentDialogId");

                    b.HasIndex("RoomId");

                    b.ToTable("Dialogs");
                });

            modelBuilder.Entity("Gamebook.Server.models.GameBookAction", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiniGameData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiniGameType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReqAction")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReqItem")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReqNPC")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReqProgress")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActionId");

                    b.HasIndex("ActionTypeId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("Gamebook.Server.models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameBookActionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RequiredRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Target")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.HasIndex("GameBookActionId");

                    b.HasIndex("RequiredRoomId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Gamebook.Server.models.ItemPosition", b =>
                {
                    b.Property<int>("ItemPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemPositionId");

                    b.HasIndex("ItemId");

                    b.HasIndex("RoomId");

                    b.ToTable("ItemPositions");
                });

            modelBuilder.Entity("Gamebook.Server.models.NPC", b =>
                {
                    b.Property<int>("NPCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Target")
                        .HasColumnType("INTEGER");

                    b.HasKey("NPCId");

                    b.HasIndex("ActionId");

                    b.HasIndex("CurrentRoomId");

                    b.ToTable("NPCs");
                });

            modelBuilder.Entity("Gamebook.Server.models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Img")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Gamebook.Server.models.Connection", b =>
                {
                    b.HasOne("Gamebook.Server.models.Room", "FromRoom")
                        .WithMany()
                        .HasForeignKey("FromRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamebook.Server.models.Room", "ToRoom")
                        .WithMany()
                        .HasForeignKey("ToRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromRoom");

                    b.Navigation("ToRoom");
                });

            modelBuilder.Entity("Gamebook.Server.models.Dialog", b =>
                {
                    b.HasOne("Gamebook.Server.models.GameBookAction", "GameBookAction")
                        .WithMany("Dialogs")
                        .HasForeignKey("ActionId");

                    b.HasOne("Gamebook.Server.models.NPC", "NPC")
                        .WithMany("Dialogs")
                        .HasForeignKey("NPCId");

                    b.HasOne("Gamebook.Server.models.Dialog", "ParentDialog")
                        .WithMany("ChildDialogs")
                        .HasForeignKey("ParentDialogId");

                    b.HasOne("Gamebook.Server.models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.Navigation("GameBookAction");

                    b.Navigation("NPC");

                    b.Navigation("ParentDialog");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Gamebook.Server.models.GameBookAction", b =>
                {
                    b.HasOne("Gamebook.Server.models.ActionType", "ActionType")
                        .WithMany("GameBookActions")
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionType");
                });

            modelBuilder.Entity("Gamebook.Server.models.Item", b =>
                {
                    b.HasOne("Gamebook.Server.models.GameBookAction", "GameBookAction")
                        .WithMany()
                        .HasForeignKey("GameBookActionId");

                    b.HasOne("Gamebook.Server.models.Room", "RequiredRoom")
                        .WithMany("RequiredItems")
                        .HasForeignKey("RequiredRoomId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GameBookAction");

                    b.Navigation("RequiredRoom");
                });

            modelBuilder.Entity("Gamebook.Server.models.ItemPosition", b =>
                {
                    b.HasOne("Gamebook.Server.models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamebook.Server.models.Room", "Room")
                        .WithMany("ItemPositions")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Gamebook.Server.models.NPC", b =>
                {
                    b.HasOne("Gamebook.Server.models.GameBookAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("Gamebook.Server.models.Room", "CurrentRoom")
                        .WithMany("NPCs")
                        .HasForeignKey("CurrentRoomId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Action");

                    b.Navigation("CurrentRoom");
                });

            modelBuilder.Entity("Gamebook.Server.models.ActionType", b =>
                {
                    b.Navigation("GameBookActions");
                });

            modelBuilder.Entity("Gamebook.Server.models.Dialog", b =>
                {
                    b.Navigation("ChildDialogs");
                });

            modelBuilder.Entity("Gamebook.Server.models.GameBookAction", b =>
                {
                    b.Navigation("Dialogs");
                });

            modelBuilder.Entity("Gamebook.Server.models.NPC", b =>
                {
                    b.Navigation("Dialogs");
                });

            modelBuilder.Entity("Gamebook.Server.models.Room", b =>
                {
                    b.Navigation("ItemPositions");

                    b.Navigation("NPCs");

                    b.Navigation("RequiredItems");
                });
#pragma warning restore 612, 618
        }
    }
}
